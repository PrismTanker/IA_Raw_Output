Prompt:  Return list of prime factors of given integer in the order from smallest to largest.
    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.
    Input number should be equal to the product of all factors
    >>> factorize(8)
    [2, 2, 2]
    >>> factorize(25)
    [5, 5]
    >>> factorize(70)
    [2, 5, 7]
    
-------------------
  Here is a sample JSON test suite for the problem you described:
```
{
  "test_factorize_8": {
    "in": {
      "n": 8
    },
    "out": [2, 2, 2]
  },
  "test_factorize_25": {
    "in": {
      "n": 25
    },
    "out": [5, 5]
  },
  "test_factorize_70": {
    "in": {
      "n": 70
    },
    "out": [2, 5, 7]
  }
}
```
In this test suite, each test case is defined by a JSON object with the following structure:

* The name of the test case (e.g. "test_factorize_8")
* The input parameters for the function (e.g. "n: 8")
* The expected output of the function

In this case, the input parameters are simply the number to factorize (represented by the "n" parameter), and the expected output is the list of prime factors in the order from smallest to largest, with each factor listed the number of times it appears in the factorization.

This test suite covers all three test cases you provided, and can be used to verify the correctness of any future solution to the problem.</s>
ERROR OCCURED: 'ascii' codec can't encode character '\u221a' in position 1637: ordinal not in range(128)

-------------------
Final reponse: None