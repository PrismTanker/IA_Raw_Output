Prompt: Return True is list elements are monotonically increasing or decreasing.
    >>> monotonic([1, 2, 4, 20])
    True
    >>> monotonic([1, 20, 4, 10])
    False
    >>> monotonic([4, 1, 0, -10])
    True
    
-------------------
  Here is a test suite for the `monotonic` function:
```
{
    "tests": [
        {
            "name": "increasing",
            "in": {
                "list": [1, 2, 4, 20]
            },
            "out": true
        },
        {
            "name": "decreasing",
            "in": {
                "list": [1, 20, 4, 10]
            },
            "out": false
        },
        {
            "name": "constant",
            "in": {
                "list": [4, 4, 4, 4]
            },
            "out": true
        },
        {
            "name": "empty",
            "in": {
                "list": []
            },
            "out": true
        },
        {
            "name": "single_element",
            "in": {
                "list": [1]
            },
            "out": true
        }
    ]
}
```
This test suite includes tests for increasing, decreasing, constant, empty, and single-element lists.</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] <= my_list[i + 1] for i in range(len(my_list) - 1)) or all(my_list[i] >= my_list[i + 1] for i in range(len(my_list) - 1))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] <= my_list[i + 1] for i in range(len(my_list) - 1)) or all(my_list[i] >= my_list[i + 1] for i in range(len(my_list) - 1))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>  
[PYTHON]
def monotonic(my_list):
    if len(my_list) <= 1:
        return True
    return all(my_list[i] >= my_list[i-1] for i in range(1, len(my_list))) or all(my_list[i] <= my_list[i-1] for i in range(1, len(my_list)))
[/PYTHON]
</s>
ERROR OCCURED: list indices must be integers or slices, not str

-------------------
Final reponse: None