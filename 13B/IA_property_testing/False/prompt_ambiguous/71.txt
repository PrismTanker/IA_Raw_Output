Prompt: Given the lengths of the three sides of a triangle. Return the area of
    the triangle if the three sides form a valid triangle. 
    Otherwise return -1.
-------------------
  ```
    from hypothesis import given, strategies
    def property_test(candidate_function) -> None:
        @given(
            side1=strategies.integers(min_value=1),
            side2=strategies.integers(min_value=1),
            side3=strategies.integers(min_value=1),
        )
        def property_1(side1, side2, side3):
            if side1 + side2 < side3 or side1 + side3 < side2 or side2 + side3 < side1:
                assert candidate_function(side1, side2, side3) == -1
            else:
                assert candidate_function(side1, side2, side3) == (side1 * side2 * side3) ** 0.5

        @given(
            side1=strategies.integers(min_value=1),
            side2=strategies.integers(min_value=1),
            side3=strategies.integers(min_value=1),
        )
        def property_2(side1, side2, side3):
            if side1 + side2 > side3 or side1 + side3 > side2 or side2 + side3 > side1:
                assert candidate_function(side1, side2, side3) == -1
            else:
                assert candidate_function(side1, side2, side3) == (side1 * side2 * side3) ** 0.5

        return [property_1, property_2]
    ```

This test suite uses the Hypothesis library to generate random integers for the three sides of a triangle and checks if the function returns the correct area of the triangle or -1 if the sides do not form a valid triangle. The `property_1` test checks that the function returns -1 when the three sides do not form a valid triangle, and the `property_2` test checks that the function returns the correct area of the triangle when the three sides form a valid triangle. The test suite is comprehensive as it covers all possible scenarios of the input parameters.</s>  ```
def get_triangle_area(a, b, c):
    if a + b > c and b + c > a and a + c > b:
        s = (a + b + c) / 2
        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
        return area
    else:
        return -1
```
This function uses the formula for the area of a triangle to calculate the area if the three sides form a valid triangle, and returns -1 otherwise. The formula is `area = (s * (s - a) * (s - b) * (s - c)) ** 0.5`, where `s = (a + b + c) / 2`. The function first checks if the three sides form a valid triangle using the triangle inequality theorem, and then calculates the area if the triangle is valid.</s>  ```
def get_triangle_area(a, b, c):
    if a + b > c and b + c > a and a + c > b:
        p = (a + b + c) / 2
        return (p * (p - a) * (p - b) * (p - c)) ** 0.5
    else:
        return -1
```
This function takes three integers `a`, `b`, and `c` as input, which represent the lengths of the three sides of a triangle. It uses the formula for the area of a triangle to calculate the area of the triangle if the three sides form a valid triangle. If the three sides do not form a valid triangle, it returns `-1`.

Here is an example of how to use this function:
```
print(get_triangle_area(3, 4, 5))  # Output: 6.0
print(get_triangle_area(1, 1, 3))  # Output: -1
```</s>
ERROR OCCURED: 'ascii' codec can't encode character '\u221a' in position 374: ordinal not in range(128)

-------------------
Final reponse: None