Prompt: 
def triangle_area(a, b, c):
    """
    Given the lengths of the three sides of a triangle. Return the area of
    the triangle rounded to 2 decimal points if the three sides form a valid triangle. 
    Otherwise return -1
    Three sides make a valid triangle when the sum of any two sides is greater 
    than the third side.
    Example:
    triangle_area(3, 4, 5) == 6.00
    triangle_area(1, 2, 10) == -1
    """

-------------------
  ```
    {
        "test_triangle_area_with_valid_inputs": {
            in: {
                a: 3,
                b: 4,
                c: 5
            },
            out: 6.00
        },
        "test_triangle_area_with_invalid_inputs": {
            in: {
                a: 1,
                b: 2,
                c: 10
            },
            out: -1
        },
        "test_triangle_area_with_valid_inputs_2": {
            in: {
                a: 5,
                b: 6,
                c: 7
            },
            out: 11.67
        },
        "test_triangle_area_with_valid_inputs_3": {
            in: {
                a: 2,
                b: 3,
                c: 4
            },
            out: 6.00
        },
        "test_triangle_area_with_valid_inputs_4": {
            in: {
                a: 3,
                b: 5,
                c: 4
            },
            out: 6.00
        },
        "test_triangle_area_with_valid_inputs_5": {
            in: {
                a: 4,
                b: 3,
                c: 5
            },
            out: 6.00
        },
        "test_triangle_area_with_valid_inputs_6": {
            in: {
                a: 5,
                b: 4,
                c: 3
            },
            out: 6.00
        },
        "test_triangle_area_with_valid_inputs_7": {
            in: {
                a: 6,
                b: 5,
                c: 4
            },
            out: 8.67
        },
        "test_triangle_area_with_valid_inputs_8": {
            in: {
                a: 7,
                b: 6,
                c: 5
            },
            out: 9.67
        },
        "test_triangle_area_with_valid_inputs_9": {
            in: {
                a: 8,
                b: 7,
                c: 6
            },
            out: 11.67
        },
        "test_triangle_area_with_valid_inputs_10": {
            in: {
                a: 9,
                b: 8,
                c: 7
            },
            out: 13.67
        },
        "test_triangle_area_with_valid_inputs_11": {
            in: {
                a: 10,
                b: 9,
                c: 8
            },
            out: 15.67
        },
        "test_triangle_area_with_valid_inputs_12": {
            in: {
                a: 11,
                b: 10,
                c: 9
            },
            out: 17.67
        },
        "test_triangle_area_with_valid_inputs_13": {
            in: {
                a: 12,
                b: 11,
                c: 10
            },
            out: 19.67
        },
        "test_triangle_area_with_valid_inputs_14": {
            in: {
                a: 13,
                b: 12,
                c: 11
            },
            out: 21.67
        },
        "test_triangle_area_with_valid_inputs_15": {
            in: {
                a: 14,
                b: 13,
                c: 12
            },
            out: 23.67
        },
        "test_triangle_area_with_valid_inputs_16": {
            in: {
                a: 15,
                b: 14,
                c: 13
            },
            out: 25.67
        },
        "test_triangle_area_with_valid_inputs_17": {
            in: {
                a: 16,
                b: 15,
                c: 14
            },
            out: 27.67
        },
        "test_triangle_area_with_valid_inputs_18": {
            in: {
                a: 17,
                b: 16,
                c: 15
            },
            out: 29.67
        },
        "test_triangle_area_with_valid_inputs_19": {
            in: {
                a: 18,
                b: 17,
                c: 16
            },
            out: 31.67
        },
        "test_triangle_area_with_valid_inputs_20": {
            in: {
                a: 19,
                b: 18,
                c: 17
            },
            out: 33.67
        },
        "test_triangle_area_with_valid_inputs_21": {
            in: {
                a: 20,
                b: 19,
                c: 18
            },
            out: 35.67
        },
        "test_triangle_area_with_valid_inputs_22": {
            in: {
                a: 21,
                b: 20,
                c: 19
            },
            out: 37.67
        },
        "test_triangle_area_with_valid_inputs_23": {
            in: {
                a: 22,
                b: 21,
                c: 20
            },
            out: 39.67
        },
        "test_triangle_area_with_valid_inputs_24": {
            in: {
                a: 23,
                b: 22,
                c: 21
            },
            out: 41.67
        },
        "test_triangle_area_with_valid_inputs_25": {
            in: {
                a: 24,
                b: 23,
                c: 22
            },
            out: 43.67
        },
        "test_triangle_area_with_valid_inputs_26": {
            in: {
                a: 25,
                b: 24,
                c: 23
            },
            out: 45.67
        },
        "test_triangle_area_with_valid_inputs_27": {
            in: {
                a: 26,
                b: 25,
                c: 24
            },
            out: 47.67
        },
        "test_triangle_area_with_valid_inputs_28": {
            in: {
                a: 27,
                b: 26,
                c: 25
            },
            out: 49.67
        },
        "test_triangle_area_with_valid_inputs_29": {
            in: {
                a: 28,
                b: 27,
                c: 26
            },
            out: 51.67
        },
        "test_triangle_area_with_valid_inputs_30": {
            in: {
                a: 29,
                b: 28,
                c: 27
            },
            out: 53.67
        },
        "test_triangle_area_with_valid_inputs_31": {
            in: {
                a: 30,
                b: 29,
                c: 28
            },
            out: 55.67
        },
        "test_triangle_area_with_valid_inputs_32": {
            in: {
                a: 31,
                b: 30,
                c: 29
            },
            out:  ```
{
    "valid_triangle": {
        "in": {
            "a": 3,
            "b": 4,
            "c": 5
        },
        "out": 6.00
    },
    "invalid_triangle": {
        "in": {
            "a": 1,
            "b": 2,
            "c": 10
        },
        "out": -1
    }
}
```</s>
ERROR OCCURED: 'ascii' codec can't encode character '\u221a' in position 278: ordinal not in range(128)

-------------------
Final reponse: None