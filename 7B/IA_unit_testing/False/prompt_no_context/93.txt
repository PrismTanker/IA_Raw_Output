Prompt: 
    Write a function that takes a message, and encodes in such a 
    way that it swaps case of all letters, replaces all vowels in 
    the message with the letter that appears 2 places ahead of that 
    vowel in the english alphabet. 
    Assume only letters. 
    
    Examples:
    >>> encode('test')
    'TGST'
    >>> encode('This is a message')
    'tHKS KS C MGSSCGG'
    
-------------------
  {
    "swapCaseAndReplaceVowels": {
      "in": {
        "message": "test"
      },
      "out": "TGST"
    },
    "swapCaseAndReplaceVowels": {
      "in": {
        "message": "This is a message"
      },
      "out": "tHKS KS C MGSSCGG"
    }
  }</s>  {
    "Test 1": {
        "in": {
            "message": "test"
        },
        "out": "TGST"
    },
    "Test 2": {
        "in": {
            "message": "This is a message"
        },
        "out": "tHKS KS C MGSSCGG"
    },
    "Test 3": {
        "in": {
            "message": "a"
        },
        "out": "B"
    },
    "Test 4": {
        "in": {
            "message": "ab"
        },
        "out": "BC"
    },
    "Test 5": {
        "in": {
            "message": "abc"
        },
        "out": "BCH"
    },
    "Test 6": {
        "in": {
            "message": "abcd"
        },
        "out": "BCHD"
    },
    "Test 7": {
        "in": {
            "message": "abcde"
        },
        "out": "BCHED"
    },
    "Test 8": {
        "in": {
            "message": "abcdef"
        },
        "out": "BCHEF"
    },
    "Test 9": {
        "in": {
            "message": "abcdefg"
        },
        "out": "BCHEG"
    },
    "Test 10": {
        "in": {
            "message": "abcdefgh"
        },
        "out": "BCHGH"
    },
    "Test 11": {
        "in": {
            "message": "abcdefghi"
        },
        "out": "BCHHI"
    },
    "Test 12": {
        "in": {
            "message": "abcdefghij"
        },
        "out": "BCHIJ"
    },
    "Test 13": {
        "in": {
            "message": "abcdefghijkl"
        },
        "out": "BCHJKL"
    },
    "Test 14": {
        "in": {
            "message": "abcdefghijklm"
        },
        "out": "BCHKLM"
    },
    "Test 15": {
        "in": {
            "message": "abcdefghijklmn"
        },
        "out": "BCHLMN"
    },
    "Test 16": {
        "in": {
            "message": "abcdefghijklmno"
        },
        "out": "BCHMNO"
    },
    "Test 17": {
        "in": {
            "message": "abcdefghijklmnop"
        },
        "out": "BCHNOP"
    },
    "Test 18": {
        "in": {
            "message": "abcdefghijklmnopq"
        },
        "out": "BCHPQ"
    },
    "Test 19": {
        "in": {
            "message": "abcdefghijklmnopqr"
        },
        "out": "BCHQR"
    },
    "Test 20": {
        "in": {
            "message": "abcdefghijklmnopqrs"
        },
        "out": "BCHRS"
    }
}</s>  {
    "test_empty_string": {
      "in": {
        "message": ""
      },
      "out": ""
    },
    "test_single_character": {
      "in": {
        "message": "t"
      },
      "out": "T"
    },
    "test_lowercase_message": {
      "in": {
        "message": "test"
      },
      "out": "tGST"
    },
    "test_uppercase_message": {
      "in": {
        "message": "TEST"
      },
      "out": "TGST"
    },
    "test_vowel_replacement": {
      "in": {
        "message": "this is a message"
      },
      "out": "tHKS KS C MGSSCGG"
    },
    "test_letter_case_swapping": {
      "in": {
        "message": "Test"
      },
      "out": "tEST"
    },
    "test_mixed_case_message": {
      "in": {
        "message": "TeSt"
      },
      "out": "tEST"
    }
  }</s>  {
    "Test 1": {
        "in": {
            "message": "test"
        },
        "out": "TGST"
    },
    "Test 2": {
        "in": {
            "message": "This is a message"
        },
        "out": "tHKS KS C MGSSCGG"
    },
    "Test 3": {
        "in": {
            "message": "abcdefghijklmnopqrstuvwxyz"
        },
        "out": "cdefghijklmnopqrstuvwxyzab"
    },
    "Test 4": {
        "in": {
            "message": "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        },
        "out": "CDEFGHIJKLMNOPQRSTUVWXYZAB"
    },
    "Test 5": {
        "in": {
            "message": "Hello World!"
        },
        "out": "hELLO wORLD!"
    },
    "Test 6": {
        "in": {
            "message": "abcdefghijklmnopqrstuvwxyz"
        },
        "out": "cdefghijklmnopqrstuvwxyzab"
    },
    "Test 7": {
        "in": {
            "message": "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        },
        "out": "CDEFGHIJKLMNOPQRSTUVWXYZAB"
    },
    "Test 8": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 9": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 10": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 11": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 12": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 13": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 14": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 15": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 16": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 17": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 18": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 19": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    },
    "Test 20": {
        "in": {
            "message": "The quick brown fox jumps over the lazy dog."
        },
        "out": "tHe QuiCK BrOwN fOx JUMPs OvEr ThE LAzY dOg."
    }
}</s>  {
    "test_encode_lowercase": {
        "in": {
            "message": "test"
        },
        "out": "tGst"
    },
    "test_encode_uppercase": {
        "in": {
            "message": "TEST"
        },
        "out": "TGST"
    },
    "test_encode_vowels": {
        "in": {
            "message": "this is a message"
        },
        "out": "tHKS KS C MGSSCGG"
    },
    "test_encode_consonants": {
        "in": {
            "message": "these are not vowels"
        },
        "out": "tHSEs r E Nt VWLS"
    }
}</s>
ERROR OCCURED: 'ascii' codec can't encode characters in position 677-681: ordinal not in range(128)

-------------------
Final reponse: None