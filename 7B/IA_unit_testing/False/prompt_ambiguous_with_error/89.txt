Prompt: Create a function encrypt that takes a string as an argument and
    returns a string encrypted by being rotated.
-------------------
  {
"encrypt_empty_string": {
in: {
string: ""
},
out: ""
},
"encrypt_string_with_no_rotation": {
in: {
string: "hello"
},
out: "hello"
},
"encrypt_string_with_rotation": {
in: {
string: "hello",
rotation: 2
},
out: "khoor"
},
"encrypt_string_with_rotation_and_spaces": {
in: {
string: "hello world",
rotation: 2
},
out: "khoor world"
}
}</s>  {
"rotation": {
in: {
string: "hello"
},
out: "ifmmp"
},
"rotation by 1": {
in: {
string: "hello",
rotation: 1
},
out: "ifmmp"
},
"rotation by 2": {
in: {
string: "hello",
rotation: 2
},
out: "jgnnq"
},
"rotation by 3": {
in: {
string: "hello",
rotation: 3
},
out: "khoor"
},
"rotation by 4": {
in: {
string: "hello",
rotation: 4
},
out: "lpsme"
},
"rotation by 5": {
in: {
string: "hello",
rotation: 5
},
out: "mrtae"
},
"rotation by 6": {
in: {
string: "hello",
rotation: 6
},
out: "nubsf"
},
"rotation by 7": {
in: {
string: "hello",
rotation: 7
},
out: "oevag"
},
"rotation by 8": {
in: {
string: "hello",
rotation: 8
},
out: "pwxyz"
},
"rotation by 9": {
in: {
string: "hello",
rotation: 9
},
out: "qx10"
},
"rotation by 10": {
in: {
string: "hello",
rotation: 10
},
out: "r11"
},
"rotation by 11": {
in: {
string: "hello",
rotation: 11
},
out: "s2"
},
"rotation by 12": {
in: {
string: "hello",
rotation: 12
},
out: "t3"
},
"rotation by 13": {
in: {
string: "hello",
rotation: 13
},
out: "u4"
},
"rotation by 14": {
in: {
string: "hello",
rotation: 14
},
out: "v5"
},
"rotation by 15": {
in: {
string: "hello",
rotation: 15
},
out: "w6"
},
"rotation by 16": {
in: {
string: "hello",
rotation: 16
},
out: "x7"
},
"rotation by 17": {
in: {
string: "hello",
rotation: 17
},
out: "y8"
},
"rotation by 18": {
in: {
string: "hello",
rotation: 18
},
out: "z9"
},
"rotation by 19": {
in: {
string: "hello",
rotation: 19
},
out: "a0"
},
"rotation by 20": {
in: {
string: "hello",
rotation: 20
},
out: "b1"
},
"rotation by 21": {
in: {
string: "hello",
rotation: 21
},
out: "c2"
},
"rotation by 22": {
in: {
string: "hello",
rotation: 22
},
out: "d3"
},
"rotation by 23": {
in: {
string: "hello",
rotation: 23
},
out: "e4"
},
"rotation by 24": {
in: {
string: "hello",
rotation: 24
},
out: "f5"
},
"rotation by 25": {
in: {
string: "hello",
rotation: 25
},
out: "g6"
},
"rotation by 26": {
in: {
string: "hello",
rotation: 26
},
out: "h7"
},
"rotation by 27": {
in: {
string: "hello",
rotation: 27
},
out: "i8"
},
"rotation by 28": {
in: {
string: "hello",
rotation: 28
},
out: "j9"
},
"rotation by 29": {
in: {
string: "hello",
rotation: 29
},
out: "k0"
},
"rotation by 30": {
in: {
string: "hello",
rotation: 30
},
out: "l1"
},
"rotation by 31": {
in: {
string: "hello",
rotation: 31
},
out: "m2"
},
"rotation by 32": {
in: {
string: "hello",
rotation: 32
},
out: "n3"
},
"rotation by 33": {
in: {
string: "hello",
rotation: 33
},
out: "o4"
},
"rotation by 34": {
in: {
string: "hello",
rotation: 34
},
out: "p5"
},
"rotation by 35": {
in: {
string: "hello",
rotation: 35
},
out: "q6"
},
"rotation by 36": {
in: {
string: "hello",
rotation: 36
},
out: "r7"
},
"rotation by 37": {
in: {
string: "hello",
rotation: 37
},
out: "s8"
},
"rotation by 38": {
in: {
string: "hello",
rotation: 38
},
out: "t9"
},
"rotation by 39": {
in: {
string: "hello",
rotation: 39
},
out: "u0"
},
"rotation by 40": {
in: {
string: "hello",
rotation: 40
},
out: "v1"
},
"rotation by 41": {
in: {
string: "hello",
rotation: 41
},
out: "w2"
},
"rotation by 42": {
in: {
string: "hello",
rotation: 42
},
out: "x3"
},
"rotation by 43": {
in: {
string: "hello",
rotation: 43
},
out: "y4"
},
"rotation by 44": {
in: {
string: "hello",
rotation: 44
},
out: "z5"
},
"rotation by 45": {
in: {
string: "hello",
rotation: 45
},
out: "a6"
},
"rotation by 46": {
in: {
string: "hello",
rotation: 46
},
out: "b7"
},
"rotation by 47": {
in: {
string: "hello",
rotation: 47
},
out: "c8"
},
"rotation by 48": {
in: {
string: "hello",
rotation: 48
},
out: "d9"
},
"rotation by 49": {
in: {
string: "hello",
rotation: 49
},
out: "e0"
},
"rotation by 50": {
in: {
string: "hello",
rotation: 50
},
out: "f1"
},
"rotation by 51": {
in: {
string: "hello",
rotation: 51
},
out: "g2"
},
"rotation by 52": {
in: {
string: "hello",
rotation: 52
},
out: "h3"
},
"rotation by 53": {
in: {
string: "hello",
rotation: 53
},
out: "i4"
},
"rotation by 54":  {
  "encrypt_simple_string": {
    "in": {
      "string": "hello"
    },
    "out": "ifmmp"
  },
  "encrypt_empty_string": {
    "in": {
      "string": ""
    },
    "out": ""
  },
  "encrypt_string_with_odd_length": {
    "in": {
      "string": "abcdefg"
    },
    "out": "bcddefg"
  },
  "encrypt_string_with_even_length": {
    "in": {
      "string": "abcdef"
    },
    "out": "bcddef"
  },
  "encrypt_string_with_non_alphanumeric_characters": {
    "in": {
      "string": "a!b@c"
    },
    "out": "b@c"
  }
}</s>
ERROR OCCURED: 'ascii' codec can't encode character '\xf8' in position 390: ordinal not in range(128)

-------------------
Final reponse: None