Prompt:  Return list of prime factors of given integer in the order from smallest to largest.
    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.
    Input number should be equal to the product of all factors
    >>> factorize(8)
    [2, 2, 2]
    >>> factorize(25)
    [5, 5]
    >>> factorize(70)
    [2, 5, 7]
    
-------------------
  from hypothesis import given, strategies

def property_test(candidate_function) -> None:
    @given(strategies.integers(1, 1000))
    def property_1(n):
        factors = candidate_function(n)
        assert len(factors) > 0
        assert all(isinstance(x, int) for x in factors)
        assert all(x >= 1 for x in factors)
        assert len(set(factors)) == len(factors)
        assert sum(factors) == n
        return factors

    @given(strategies.integers(1, 1000))
    def property_2(n):
        factors = candidate_function(n)
        for factor in factors:
            assert n % factor == 0
        return factors

    return [property_1, property_2]</s>
ERROR OCCURED: 'ascii' codec can't encode character '\u221a' in position 637: ordinal not in range(128)

-------------------
Final reponse: None