Prompt: Return n-th Fibonacci number.
    >>> fib(10)
    55
    >>> fib(1)
    1
    >>> fib(8)
    21
    
-------------------
  ```
    from hypothesis import given, strategies
    def property_test(candidate_function) -> None:
        @given(strategies.integers(min_value=0, max_value=100))
        def property_1(n):
            assert candidate_function(n) == fib(n)
        @given(strategies.integers(min_value=101, max_value=1000))
        def property_2(n):
            assert candidate_function(n) == fib(n)
        return [property_1, property_2]
```</s>  ```
import math

def fib(n):
    if n <= 1:
        return n
    else:
        return fib(n-1) + fib(n-2)
```
This code uses the recursive approach to calculate the n-th Fibonacci number. The `fib` function takes a single integer argument `n` and returns the n-th Fibonacci number. If `n` is less than or equal to 1, it returns `n`. Otherwise, it calculates the n-th Fibonacci number by adding the (n-1)-th and (n-2)-th Fibonacci numbers.

This code passes all three test cases. The first test case returns 55, which is the 10-th Fibonacci number. The second test case returns 1, which is the 1-st Fibonacci number. The third test case returns 21, which is the 8-th Fibonacci number.</s>
ERROR OCCURED: 'ascii' codec can't encode character '\u221a' in position 262: ordinal not in range(128)

-------------------
Final reponse: None