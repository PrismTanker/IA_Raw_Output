Prompt: Filter an input list of strings only for ones that start with a given prefix.
-------------------
  {
"prefix_filter": {
in: {
prefix: "abc"
list: ["abc1", "abc2", "def1", "ghi2"]
},
out: ["abc1", "abc2"]
}
}
{
"empty_list": {
in: {
prefix: "abc"
list: []
},
out: []
}
}
{
"no_match": {
in: {
prefix: "abc"
list: ["def1", "ghi2"]
},
out: []
}
}
{
"multiple_matches": {
in: {
prefix: "abc"
list: ["abc1", "abc2", "abc3", "def1", "ghi2"]
},
out: ["abc1", "abc2", "abc3"]
}
}
</s>  {
"Test1": {
"in": {
"prefix": "abc",
"input_list": ["abcdef", "abcd", "abcefgh", "abcefg", "abcfgh"]
},
"out": ["abcdef", "abcd", "abcefg"]
},
"Test2": {
"in": {
"prefix": "def",
"input_list": ["abcdef", "abcd", "abcefgh", "abcefg", "abcfgh"]
},
"out": ["abcdef"]
},
"Test3": {
"in": {
"prefix": "abc",
"input_list": ["abcd", "abcefgh", "abcefg", "abcfgh"]
},
"out": ["abcd", "abcefg"]
},
"Test4": {
"in": {
"prefix": "abc",
"input_list": ["abcdef", "abcd", "abcefgh", "abcefg", "abcfgh", "abcd"]
},
"out": ["abcdef", "abcd", "abcefg", "abcfgh"]
}
}</s>  {
"Test1": {
"in": {
"prefix": "A",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Alice"]
},
"Test2": {
"in": {
"prefix": "B",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Bob"]
},
"Test3": {
"in": {
"prefix": "C",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Charlie"]
},
"Test4": {
"in": {
"prefix": "D",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["David"]
},
"Test5": {
"in": {
"prefix": "a",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Alice"]
},
"Test6": {
"in": {
"prefix": "b",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Bob"]
},
"Test7": {
"in": {
"prefix": "c",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Charlie"]
},
"Test8": {
"in": {
"prefix": "d",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["David"]
},
"Test9": {
"in": {
"prefix": "Alice",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Alice"]
},
"Test10": {
"in": {
"prefix": "Bob",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Bob"]
},
"Test11": {
"in": {
"prefix": "Charlie",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Charlie"]
},
"Test12": {
"in": {
"prefix": "David",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["David"]
},
"Test13": {
"in": {
"prefix": "a",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Alice"]
},
"Test14": {
"in": {
"prefix": "b",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Bob"]
},
"Test15": {
"in": {
"prefix": "c",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Charlie"]
},
"Test16": {
"in": {
"prefix": "d",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["David"]
},
"Test17": {
"in": {
"prefix": "Alice",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Alice"]
},
"Test18": {
"in": {
"prefix": "Bob",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Bob"]
},
"Test19": {
"in": {
"prefix": "Charlie",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Charlie"]
},
"Test20": {
"in": {
"prefix": "David",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["David"]
},
"Test21": {
"in": {
"prefix": "a",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Alice"]
},
"Test22": {
"in": {
"prefix": "b",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Bob"]
},
"Test23": {
"in": {
"prefix": "c",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["Charlie"]
},
"Test24": {
"in": {
"prefix": "d",
"input_list": ["Alice", "Bob", "Charlie", "David"]
},
"out": ["David"]
}
}</s>  {
"test1": {
"in": {
"prefix": "abc"
},
"out": ["abc1", "abc2"]
},
"test2": {
"in": {
"prefix": "def"
},
"out": ["def3", "def4"]
},
"test3": {
"in": {
"prefix": "ghi"
},
"out": ["ghi5", "ghi6"]
},
"test4": {
"in": {
"prefix": "jkl"
},
"out": ["jkl7", "jkl8"]
}
}</s>
ERROR OCCURED: 'ascii' codec can't encode character '\xe1' in position 1005: ordinal not in range(128)

-------------------
Final reponse: None